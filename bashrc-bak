#
# ~/.bashrc
#
xinput disable 16
xinput disable "SYNA7500:00 06CB:190B"

if xhost >& /dev/null; then
    xinput disable "SYNA7500:00 06CB:190B Touchscreen"
    
fi

xrandr --output DP1 --scale 1.5x1.5
xrandr --output DP1 --scale 1.4x1.4

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

[[ -f ~/.welcome_screen ]] && . ~/.welcome_screen

_set_liveuser_PS1() {
    PS1='[\u@\h \W]\$ '
    if [ "$(whoami)" = "liveuser" ] ; then
        local iso_version="$(grep ^VERSION= /usr/lib/endeavouros-release 2>/dev/null | cut -d '=' -f 2)"
        if [ -n "$iso_version" ] ; then
            local prefix="eos-"
            local iso_info="$prefix$iso_version"
            PS1="[\u@$iso_info \W]\$ "
        fi
    fi
}
_set_liveuser_PS1
unset -f _set_liveuser_PS1

ShowInstallerIsoInfo() {
    local file=/usr/lib/endeavouros-release
    if [ -r $file ] ; then
        cat $file
    else
        echo "Sorry, installer ISO info is not available." >&2
    fi
}


alias ls='ls --color=auto'
alias ll='ls -lav --ignore=..'   # show long listing of all except ".."
alias l='ls -lav --ignore=.?*'   # show long listing but no hidden dotfiles except "."

[[ "$(whoami)" = "root" ]] && return

[[ -z "$FUNCNEST" ]] && export FUNCNEST=100          # limits recursive functions, see 'man bash'

## Use the up and down arrow keys for finding a command in history
## (you can write some initial letters of the command first).
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'

################################################################################
## Some generally useful functions.
## Consider uncommenting aliases below to start using these functions.
##
## October 2021: removed many obsolete functions. If you still need them, please look at
## https://github.com/EndeavourOS-archive/EndeavourOS-archiso/raw/master/airootfs/etc/skel/.bashrc

_open_files_for_editing() {
    # Open any given document file(s) for editing (or just viewing).
    # Note1:
    #    - Do not use for executable files!
    # Note2:
    #    - Uses 'mime' bindings, so you may need to use
    #      e.g. a file manager to make proper file bindings.

    if [ -x /usr/bin/exo-open ] ; then
        echo "exo-open $@" >&2
        setsid exo-open "$@" >& /dev/null
        return
    fi
    if [ -x /usr/bin/xdg-open ] ; then
        for file in "$@" ; do
            echo "xdg-open $file" >&2
            setsid xdg-open "$file" >& /dev/null
        done
        return
    fi

    echo "$FUNCNAME: package 'xdg-utils' or 'exo' is required." >&2
}

#------------------------------------------------------------

## Aliases for the functions above.
## Uncomment an alias if you want to use it.
##

# alias ef='_open_files_for_editing'     # 'ef' opens given file(s) for editing
# alias pacdiff=eos-pacdiff
################################################################################
# splunk
export SPLUNK_HOME=/data/applications/splunk
export PATH=$PATH:$SPLUNK_HOME:$SPLUNK_HOME/bin

# confluent kafka
export CONFLUENT_HOME=/data/applications/kafka/confluent/confluent-7.2.1
#export CONFLUENT_CURRENT=$CONFLUENT_HOME/var
export PATH=$PATH:$CONFLUENT_HOME/bin

# apache puslar
export PULSAR_HOME=/data/applications/pulsar/apache-pulsar-2.8.1
export PATH=$PATH:$PULSAR_HOME/bin

# curl certs
export CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

# asdf
source ~/.asdf/asdf.sh
source ~/.asdf/completions/asdf.bash

# rust
export CARGO_BIN=/home/keith/.asdf/installs/rust/1.63.0/bin
export PATH=$PATH:$CARGO_BIN

export PATH=$PATH:~/.asdf/shims
export JAVA_HOME="/data/.asdf/installs/java/adoptopenjdk-11.0.16+101"
source ~/.asdf/plugins/java/set-java-home.bash

# Not Used-----------------------------------------------------------
#PATH="${PATH:+${PATH}:}~/opt/bin"
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
#export SDKMAN_DIR="/home/keith/.sdkman"

#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"

# Add JBang to environment
alias j!=jbang
export PATH="$HOME/.jbang/bin:$PATH"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/keith/micromamba/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/keith/micromamba/etc/profile.d/conda.sh" ]; then
        . "/home/keith/micromamba/etc/profile.d/conda.sh"
    else
        export PATH="/home/keith/micromamba/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# >>> mamba initialize >>>
# !! Contents within this block are managed by 'mamba init' !!
export MAMBA_EXE="/home/keith/.micromamba/bin/micromamba";
export MAMBA_ROOT_PREFIX="/home/keith/micromamba";
__mamba_setup="$('/home/keith/.micromamba/bin/micromamba' shell hook --shell bash --prefix '/home/keith/micromamba' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "/home/keith/micromamba/etc/profile.d/micromamba.sh" ]; then
        . "/home/keith/micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="/home/keith/micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
    fi
fi
unset __mamba_setup
# <<< mamba initialize <<<
